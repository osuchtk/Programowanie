#include <iostream>
#include <string>
#include<iomanip>
#include <conio.h>
# include <istream >
# include <fstream >
using namespace std;

class Zawodnik
{
public:
	string nazwisko;
	string imie;
	string klub;
	int wyscig1;
	int wyscig2;
	int wyscig3;
	int rok_ur;
	int punkty;
	double pesel;

	void wyswietl(class Zawodnik* tab, int ile);
	void dane_zaw(class Zawodnik* tab, int ile);
	void punktacja(class Zawodnik* tab, int ile);

	//tworzenie konstruktora bez wartosci
	Zawodnik()
	{
		this->nazwisko;
		this->imie;
		this->pesel;
		this->rok_ur;
		this->klub;
		this->wyscig1;
		this->wyscig2;
		this->wyscig3;
	}

	//tworzenie konstruktora z wartosciami
	Zawodnik(string n, string i, double p, int r, string k, int w1, int w2, int w3)
	{
		//cout << "Tworze sie" << endl;
		this->nazwisko = n;
		this->imie = i;
		this->pesel = p;
		this->rok_ur = r;
		this->klub = k;
		this->wyscig1 = w1;
		this->wyscig2 = w2;
		this->wyscig3 = w3;
	}

	//przeciążenie konstruktora (brak imienia i nazwiska)
	

	//destruktor
	~Zawodnik()
	{
		cout << "Czesc" << endl;
	}
};

void pobierz(class Zawodnik* tab, int ile)
{
	for (int i = 0; i < ile; i++)
	{
		cout << "Podaj imie: ";
		cin >> tab[i].imie;
		cout << "Podaj nazwisko: ";
		cin >> tab[i].nazwisko;
		cout << "Podaj pesel: ";
		cin >> tab[i].pesel;
		cout << "Podaj rok urodzenia: ";
		cin >> tab[i].rok_ur;
		cout << "Podaj nazwe klubu zawodnika: ";
		cin >> tab[i].klub;
		cout << "Miejsce po pierwszym wyscigu: ";
		cin >> tab[i].wyscig1;
		cout << "Miejsce po drugim wyscigu: ";
		cin >> tab[i].wyscig2;
		cout << "Miejsce po trzecim wyscigu: ";
		cin >> tab[i].wyscig3;
		system("cls");
	}
}

void Zawodnik::dane_zaw(class Zawodnik* tab, int ile)
{
	for (int i = 0; i < ile; i++)
	{
		cout << i + 1 << ". Nazwisko, imie: " << tab[i].nazwisko << " " << tab[i].imie << endl;
		cout << "   Pesel: " << setprecision(15) << tab[i].pesel << endl;
		cout << "   Rok urodzenia: " << tab[i].rok_ur << endl;
		cout << "   Klub: " << tab[i].klub << endl;
		cout << "\n";
	}
}

void Zawodnik::wyswietl(class Zawodnik* tab, int ile)
{
	for (int i = 0; i < ile; i++)
	{
		cout << "Nazwisko, imie: " << tab[i].nazwisko << " " << tab[i].imie << endl;
		cout << "Miejsce po pierwszym wyscigu: " << tab[i].wyscig1 << endl;
		cout << "Miejsce po drugim wyscigu: " << tab[i].wyscig2 << endl;
		cout << "Miejsce po trzecim wyscigu: " << tab[i].wyscig3 << endl << endl;
	}
}

void Zawodnik::punktacja(class Zawodnik* tab, int ile)
{
	for (int i = 0; i < ile; i++)
	{
		tab[i].punkty = 0;

		switch (tab[i].wyscig1)
		{
		case 1:
			tab[i].punkty += 4;
			break;
		case 2:
			tab[i].punkty += 2;
			break;
		case 3:
			tab[i].punkty += 1;
			break;
		default:
			tab[i].punkty += 0;
			break;
		}

		switch (tab[i].wyscig2)
		{
		case 1:
			tab[i].punkty += 4;
			break;
		case 2:
			tab[i].punkty += 2;
			break;
		case 3:
			tab[i].punkty += 1;
			break;
		default:
			tab[i].punkty += 0;
			break;
		}

		switch (tab[i].wyscig3)
		{
		case 1:
			tab[i].punkty += 4;
			break;
		case 2:
			tab[i].punkty += 2;
			break;
		case 3:
			tab[i].punkty += 1;
			break;
		default:
			tab[i].punkty += 0;
			break;
		}

		cout << "Nazwisko: " << tab[i].nazwisko << " || " << "Liczba punktow po trzech wyscigach: " << tab[i].punkty << endl << endl;
	}
}

class TextFile
{
public:
	string linia;
	fstream plik;

	void plik_zapis(class Zawodnik* tab, int ile, string *nazwapliku)
	{
		plik.open(*nazwapliku+=".txt", ios::out | ios::app);
		if (plik.good() == true)
		{
			for (int i = 0; i < ile; i++)
			{
				plik << tab[i].nazwisko <<  ";" << tab[i].imie << ";" << tab[i].pesel << ";" << tab[i].rok_ur << ";" << tab[i].klub << ";" << tab[i].wyscig1 << ";" << tab[i].wyscig2 << ";" << tab[i].wyscig3 << ";" << tab[i].punkty << ";" << endl;
			}	
		}
		else cout << "Blad otwieranie pliku\n";
		plik.close();
	}

	void plik_odczyt(string *nazwapliku)
	{
		plik.open(*nazwapliku, ios::in);
		if (plik.good() == true)
		{			
				while (!plik.eof())
				{
					getline(plik, linia);
					cout << linia << endl;					
				}			
		}
		else cout << "Blad otwierania pliku\n";
		plik.close();
	}	
};

int main()
{
	int n;
	string nazwa_pliku;
	string *nazwa = &nazwa_pliku;
	cout << "Podaj nazwe pliku tekstowego \n*tutaj beda zapisane dane oraz z tego pliku zostana odczytane,\n**jesli plik nie istnieje to zostanie utworzony\n***jesli plik o podanej nazwie istnieje to zostanie zmodyfikowany:\n ";
	cin >> *nazwa;
	TextFile *pliktekstowy = new TextFile;;
	cout << "Podaj liczbe zawodnikow: ";
	cin >> n;
	Zawodnik *dane = new Zawodnik[n];
	system("cls");

	pobierz(dane, n);
	pliktekstowy->plik_zapis(dane, n, nazwa);

	cout << "Wybierz (1) aby wyswitlic miejsca zajete przez zawodnika\nWybierz (2) aby zobaczyc dane zawodnikow\nWybierz (3) aby wyswitlic punktacje\nWybierz (4) aby odczytac dane z pliku\nWybierz (5) aby zakonczyc program" << endl;
	int wybor;

	while (true)
	{
		cin >> wybor;
		system("cls");

		switch (wybor)
		{
		case 1:
			dane->wyswietl(dane, n);
			cout << "Wybierz (2) aby zobaczyc dane zawodnikow\nWybierz (3) aby wyswitlic punktacje\nWybierz (4) aby odczytac dane z pliku\nWybierz (5) aby zakonczyc program\n" << endl;
			break;

		case 2:
			dane->dane_zaw(dane, n);
			cout << "Wybierz (1) aby wyswitlic miejsca zajete przez zawodnika\nWybierz (3) aby wyswitlic punktacje\nWybierz (4) aby odczytac dane z pliku\nWybierz (5) aby zakonczyc program\n" << endl;
			break;

		case 3:
			dane->punktacja(dane, n);
			cout << "Wybierz (1) aby wyswitlic miejsca zajete przez zawodnika\nWybierz (2) aby zobaczyc dane zawodnikow\nWybierz (4) aby odczytac dane z pliku\nWybierz (5) aby zakonczyc program\n" << endl;
			break;

		case 4:
			pliktekstowy->plik_odczyt(nazwa);
			cout << "Wybierz (1) aby wyswitlic miejsca zajete przez zawodnika\nWybierz (2) aby zobaczyc dane zawodnikow\nWybierz (3) aby wyswietlic punktacje\nWybierz (5) aby zakonczyc program\n" << endl;
			break;
		case 5:
			getchar();
			exit(0);
			break;

		default:
			cout << "Blad\n" << endl;
			cout << "Wybierz (1) aby wyswitlic miejsca zajete przez zawodnika\nWybierz (2) aby zobaczyc dane zawodnikow\nWybierz (3) aby wyswitlic punktacje\nWybierz (4) aby odczytac dane z pliku\nWybierz (5) aby zakonczyc program\n" << endl;
			break;
		}
	}

}
