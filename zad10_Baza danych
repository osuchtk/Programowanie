#include "pch.h"
#include <iostream>

struct Contact
{
	char imie[100];
	char nazwisko[100];
	char numer[20];
};

Contact* inputContactAttributes()
{

	char imie[100];
	char nazwisko[100];
	char numer[20];

	printf_s("Podaj imie: ");
	scanf_s("%s", imie, 100);
	printf_s("Podaj nazwisko: ");
	scanf_s("%s", nazwisko, 100);
	printf_s("Podaj numer telefonu: ");
	scanf_s("%s", numer, 20);

	struct Contact *kontakt = (struct Contact*) malloc(sizeof(struct Contact));

	sprintf_s(kontakt->imie, imie);
	sprintf_s(kontakt->nazwisko, nazwisko);
	sprintf_s(kontakt->numer, numer);

	return kontakt;
}

void addContact()
{

	char fileName[100];
	sprintf_s(fileName, "kontakty.txt");
	FILE* outputFile;
	fopen_s(&outputFile, fileName, "a");
	Contact *kontakt = inputContactAttributes();

	fprintf_s(outputFile, "%s\n%s\n%s\n", kontakt->imie, kontakt->nazwisko, kontakt->numer);
	free(kontakt);
	fclose(outputFile);
}

void showContacts()
{

	char fileName[100];
	sprintf_s(fileName, "kontakty.txt");
	FILE* outputFile;
	fopen_s(&outputFile, fileName, "r");

	char imie[100];
	char nazwisko[100];
	char numer[20];

	struct Contact *kontakt = (struct Contact*) malloc(sizeof(struct Contact));
	//int i = 1;
	while (fgets(imie, 100, outputFile) != NULL)
	{
		int i=1;
		fgets(nazwisko, 100, outputFile);
		fgets(numer, 20, outputFile);

		sprintf_s(kontakt->imie, imie);
		sprintf_s(kontakt->nazwisko, nazwisko);
		sprintf_s(kontakt->numer, numer);

		printf_s("%d\t  %s  \t  %s|\t  %s", i, kontakt->imie, kontakt->nazwisko, kontakt->numer);
		printf_s("------------------------------\n");
		i++;
	}
	free(kontakt);
	fclose(outputFile);
	char problemy; //musi byÄ‡?
	scanf_s("%c", &problemy);
	while (problemy == NULL);
	{
		scanf_s("%c", &problemy);
		printf("%c\n", problemy);
	}
}

void deleteContacts()
{
	int i;
	char c;

	showContacts();
	printf_s("Ktory kontakt chcesz usunac:");
	scanf_s("%d", &i);
	printf_s("Czy jestes pewien? (T/N):");
	scanf_s("%c", &c);
	while (c != 'T' && c != 'N')
	{
		scanf_s("%c", &c);
	}
	if (c == 'T')
	{
		char fileName[100];
		sprintf_s(fileName, "kontakty.txt");
		FILE* inputFile;
		FILE* outputFile;
		fopen_s(&inputFile, fileName, "r");
		fopen_s(&outputFile, "temp.txt", "w");

		char imie[100];
		char nazwisko[100];
		char numer[20];

		struct Contact *kontakt = (struct Contact*) malloc(sizeof(struct Contact));

		for (int j = 1; j < i; j++)
		{
			fgets(imie, 100, inputFile);
			fgets(nazwisko, 100, inputFile);
			fgets(numer, 20, inputFile);

			sprintf_s(kontakt->imie, imie);
			sprintf_s(kontakt->nazwisko, nazwisko);
			sprintf_s(kontakt->numer, numer);

			fprintf_s(outputFile, "%s%s%s", kontakt->imie, kontakt->nazwisko, kontakt->numer);
		}

		fgets(imie, 100, inputFile);
		fgets(nazwisko, 100, inputFile);
		fgets(numer, 20, inputFile);

		while (fgets(imie, 100, inputFile) != NULL)
		{
			fgets(nazwisko, 100, inputFile);
			fgets(numer, 20, inputFile);

			sprintf_s(kontakt->imie, imie);
			sprintf_s(kontakt->nazwisko, nazwisko);
			sprintf_s(kontakt->numer, numer);

			fprintf_s(outputFile, "%s%s%s", kontakt->imie, kontakt->nazwisko, kontakt->numer);
		}

		fclose(inputFile);
		fclose(outputFile);

		remove(fileName);
		rename("temp.txt", fileName);

	}



}

void editContact()
{
	int i;
	char c;

	showContacts();
	printf_s("Ktory kontakt chcesz edytowac:");
	scanf_s("%d", &i);
	printf_s("Czy jestes pewien? (T/N):");
	scanf_s("%c", &c);
	while (c != 'T' && c != 'N')
	{
		scanf_s("%c", &c);
	}
	if (c == 'T')
	{
		char fileName[100];
		sprintf_s(fileName, "kontakty.txt");
		FILE* inputFile;
		FILE* outputFile;
		fopen_s(&inputFile, fileName, "r");
		fopen_s(&outputFile, "temp.txt", "w");

		char imie[100];
		char nazwisko[100];
		char numer[20];

		struct Contact *kontakt = (struct Contact*) malloc(sizeof(struct Contact));

		for (int j = 1; j < i; j++)
		{
			fgets(imie, 100, inputFile);
			fgets(nazwisko, 100, inputFile);
			fgets(numer, 20, inputFile);

			sprintf_s(kontakt->imie, imie);
			sprintf_s(kontakt->nazwisko, nazwisko);
			sprintf_s(kontakt->numer, numer);

			fprintf_s(outputFile, "%s%s%s", kontakt->imie, kontakt->nazwisko, kontakt->numer);
		}

		fgets(imie, 100, inputFile);
		fgets(nazwisko, 100, inputFile);
		fgets(numer, 20, inputFile);

		Contact *edytowany = inputContactAttributes();

		fprintf_s(outputFile, "%s\n%s\n%s\n", edytowany->imie, edytowany->nazwisko, edytowany->numer);
		free(edytowany);

		while (fgets(imie, 100, inputFile) != NULL)
		{
			fgets(nazwisko, 100, inputFile);
			fgets(numer, 20, inputFile);

			sprintf_s(kontakt->imie, imie);
			sprintf_s(kontakt->nazwisko, nazwisko);
			sprintf_s(kontakt->numer, numer);

			fprintf_s(outputFile, "%s%s%s", kontakt->imie, kontakt->nazwisko, kontakt->numer);
		}

		fclose(inputFile);
		fclose(outputFile);

		remove(fileName);
		rename("temp.txt", fileName);

	}
}

int main()
{
	printf("A- tworzenie wpisow	R- przegladanie danych	U- aktualizacja wspiow	D- kasowanie wspisow	E- wyjscie z programu\n\n");

	for (; ;)
	{
		char znak;
		znak = getchar();

		switch (znak)
		{
		case 'A':
			addContact();
			break;

		case 'R':
			showContacts();
			break;

		case 'U':
			editContact();
			break;

		case 'D':
			deleteContacts();
			break;

		case 'E':
			exit(0);
			break;
		}
	}
}




